{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterOS": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "defaultValue": "Windows",
      "metadata": {
        "description": "Select the cluster OS."
      }
    },
    "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Name of existing virtual network to use. Letters and numbers only"
        }
      },
      "existingVnetResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "Name of the resourceGroup for the existing virtual network to deploy the scale set into."
        }
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "Name of the existing subnet to deploy the scale set into."
        }
      },    
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "domainName": {
        "type": "string",
        "defaultValue": "QNXTCLOUD.COM",
        "metadata": {
          "description": "The Domain to Join"
        }
      },
      "domainJoinPassword": {
        "type": "string",
        "metadata": {
          "description": "The Domain Join Password"
        }
      },
      "domainAdmin": {
        "type": "string",
        "metadata": {
          "description": "The Domain Admin Username"
        }
      },
      "ouPath": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
         "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
        }      
    },
    "certificate": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "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",
      "metadata": {
        "description": "Certificate as Base64 encoded string."
      }
    },
    "certificatePassword": {
      "type": "securestring",
      "defaultValue": "pass@word1",
      "metadata": {
        "description": "Certificate password for installation."
      }
    },
    "certificateThumbprint": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "7B668EE2E3B8B354B8EB0149BBF3BA16DE246AB9",
      "metadata": {
        "description": "Certificate thumbprint for identification in the local certificate store."
      }
    },
    "loadBalancedAppPort1": {
      "type": "int",
      "defaultValue": 80,
      "minValue": 1,
      "metadata": {
        "description": "Public accessible application port #1."
      }
    },
    "loadBalancedAppPort2": {
      "type": "int",
      "defaultValue": 443,
      "minValue": 1,
      "metadata": {
        "description": "Public accessible application port #2."
      }
    },
    "loadBalancedEUPort1":{
        "type": "int",
        "defaultValue": 8080,
        "minValue": 1,
        "metadata": {
            "description": "Public accessible application port #2."
        }    
    },
    "loadBalancedDHPort1":{
        "type": "int",
        "defaultValue": 8090,
        "minValue": 1,
        "metadata": {
            "description": "Public accessible application port #2."
        }    
    }
  },
  "variables": {
    "quickstartRepoRoot": "https://raw.githubusercontent.com/ryankmcintyre/Titans/master/",
    "clusterName": "[concat('sf-', toLower(uniqueString(resourceGroup().name)))]",
    "vaultName": "[concat('kv-', toLower(uniqueString(resourceGroup().name)))]",
    "vaultSecret": "ClusterCertificate",
    "nt0InstanceCount": 5
  },
    "resources": [
        {
            "name": "[variables('vaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": false,
                "enabledForVolumeEncryption": false,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "name": "[concat(variables('vaultName'), '/', variables('vaultSecret'))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2015-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
            ],
            "properties": {
                "value": "[base64(concat('{ \"data\":\"', parameters('certificate'), '\", \"dataType\":\"pfx\", \"password\":\"', parameters('certificatePassword'), '\" }'))]"
            }
        },
        {
            "condition": "[equals(parameters('clusterOS'), 'Windows')]",
            "name": "[concat(deployment().name, '-QuickstartTemplate-Windows')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
            ],
            "properties": {
                "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(variables('quickstartRepoRoot'), 'qnxt-servicefabric/azuredeploy.json')]",
                "contentVersion": "1.0.0.0"
              },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "existingVnetResourceGroupName": {
                        "value": "[parameters('existingVnetResourceGroupName')]"
                    },
                    "existingSubnetName": {
                        "value": "[parameters('existingSubnetName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "domainJoinPassword": {
                        "value": "[parameters('domainJoinPassword')]"
                    },
                    "domainAdmin": {
                        "value": "[parameters('domainAdmin')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "ouPath": {
                        "value": "[parameters('ouPath')]"
                    },
                    "loadBalancedAppPort1": {
                        "value": "[parameters('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                        "value": "[parameters('loadBalancedAppPort2')]"
                    },
                    "loadBalancedEUPort1":{
                        "value": "[parameters('loadBalancedEUPort1')]"
                    },
                    "loadBalancedDHPort1":{
                        "value": "[parameters('loadBalancedDHPort1')]"
                    },
                    "certificateThumbprint": {
                        "value": "[parameters('certificateThumbprint')]"
                    }
                }
            }
        },
        {
            "condition": "[equals(parameters('clusterOS'), 'Linux')]",
            "name": "[concat(deployment().name, '-QuickstartTemplate-Linux')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), 'service-fabric-cluster-ubuntu-5-node-1-nodetype/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "clusterDnsName": {
                        "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "existingVnetResourceGroupName": {
                        "value": "[parameters('existingVnetResourceGroupName')]"
                    },
                    "existingSubnetName": {
                        "value": "[parameters('existingSubnetName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "domainJoinPassword": {
                        "value": "[parameters('domainJoinPassword')]"
                    },
                    "domainAdmin": {
                        "value": "[parameters('domainAdmin')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "ouPath": {
                        "value": "[parameters('ouPath')]"
                    },
                    "vmImageOffer": {
                        "value": "UbuntuServer"
                    },
                    "vmImageSku": {
                        "value": "16.04"
                    },
                    "vmImageVersion": {
                        "value": "6.0.11"
                    },
                    "loadBalancedAppPort1": {
                        "value": "[parameters('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                        "value": "[parameters('loadBalancedAppPort2')]"
                    },
                    "loadBalancedEUPort1":{
                        "value": "[parameters('loadBalancedEUPort1')]"
                    },
                    "loadBalancedDHPort1":{
                        "value": "[parameters('loadBalancedDHPort1')]"
                    },
                    "certificateThumbprint": {
                        "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultValue": {
                        "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                        "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                        "value": "[variables('nt0InstanceCount')]"
                    },
                    "nodeDataDrive": {
                        "value": "OS"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
